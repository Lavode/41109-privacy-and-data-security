





Internet Engineering Task Force (IETF)                  K. Moriarty, Ed.
Request for Comments: 8017                               EMC Corporation
Obsoletes: 3447                                               B. Kaliski
Category: Informational                                         Verisign
ISSN: 2070-1721                                               J. Jonsson
                                                               Subset AB
                                                                A. Rusch
                                                                     RSA
                                                           November 2016


          PKCS #1: RSA Cryptography Specifications Version 2.2

Abstract

   This document provides recommendations for the implementation of
   public-key cryptography based on the RSA algorithm, covering
   cryptographic primitives, encryption schemes, signature schemes with
   appendix, and ASN.1 syntax for representing keys and for identifying
   the schemes.

   This document represents a republication of PKCS #1 v2.2 from RSA
   Laboratories' Public-Key Cryptography Standards (PKCS) series.  By
   publishing this RFC, change control is transferred to the IETF.

   This document also obsoletes RFC 3447.

Status of This Memo

   This document is not an Internet Standards Track specification; it is
   published for informational purposes.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Not all documents
   approved by the IESG are a candidate for any level of Internet
   Standard; see Section 2 of RFC 7841.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   http://www.rfc-editor.org/info/rfc8017.









Moriarty, et al.              Informational                     [Page 1]

RFC 8017                      PKCS #1 v2.2                 November 2016


Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





































Moriarty, et al.              Informational                     [Page 2]

RFC 8017                      PKCS #1 v2.2                 November 2016


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   5
   2.  Notation  . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   3.  Key Types . . . . . . . . . . . . . . . . . . . . . . . . . .   8
     3.1.  RSA Public Key  . . . . . . . . . . . . . . . . . . . . .   8
     3.2.  RSA Private Key . . . . . . . . . . . . . . . . . . . . .   9
   4.  Data Conversion Primitives  . . . . . . . . . . . . . . . . .  11
     4.1.  I2OSP . . . . . . . . . . . . . . . . . . . . . . . . . .  11
     4.2.  OS2IP . . . . . . . . . . . . . . . . . . . . . . . . . .  12
   5.  Cryptographic Primitives  . . . . . . . . . . . . . . . . . .  12
     5.1.  Encryption and Decryption Primitives  . . . . . . . . . .  12
       5.1.1.  RSAEP . . . . . . . . . . . . . . . . . . . . . . . .  13
       5.1.2.  RSADP . . . . . . . . . . . . . . . . . . . . . . . .  13
     5.2.  Signature and Verification Primitives . . . . . . . . . .  15
       5.2.1.  RSASP1  . . . . . . . . . . . . . . . . . . . . . . .  15
       5.2.2.  RSAVP1  . . . . . . . . . . . . . . . . . . . . . . .  16
   6.  Overview of Schemes . . . . . . . . . . . . . . . . . . . . .  17
   7.  Encryption Schemes  . . . . . . . . . . . . . . . . . . . . .  18
     7.1.  RSAES-OAEP  . . . . . . . . . . . . . . . . . . . . . . .  19
       7.1.1.  Encryption Operation  . . . . . . . . . . . . . . . .  22
       7.1.2.  Decryption Operation  . . . . . . . . . . . . . . . .  25
     7.2.  RSAES-PKCS1-v1_5  . . . . . . . . . . . . . . . . . . . .  27
       7.2.1.  Encryption Operation  . . . . . . . . . . . . . . . .  28
       7.2.2.  Decryption Operation  . . . . . . . . . . . . . . . .  29
   8.  Signature Scheme with Appendix  . . . . . . . . . . . . . . .  31
     8.1.  RSASSA-PSS  . . . . . . . . . . . . . . . . . . . . . . .  32
       8.1.1.  Signature Generation Operation  . . . . . . . . . . .  33
       8.1.2.  Signature Verification Operation  . . . . . . . . . .  34
     8.2.  RSASSA-PKCS1-v1_5 . . . . . . . . . . . . . . . . . . . .  35
       8.2.1.  Signature Generation Operation  . . . . . . . . . . .  36
       8.2.2.  Signature Verification Operation  . . . . . . . . . .  37
   9.  Encoding Methods for Signatures with Appendix . . . . . . . .  39
     9.1.  EMSA-PSS  . . . . . . . . . . . . . . . . . . . . . . . .  40
       9.1.1.  Encoding Operation  . . . . . . . . . . . . . . . . .  42
       9.1.2.  Verification Operation  . . . . . . . . . . . . . . .  44
     9.2.  EMSA-PKCS1-v1_5 . . . . . . . . . . . . . . . . . . . . .  45
   10. Security Considerations . . . . . . . . . . . . . . . . . . .  47
   11. References  . . . . . . . . . . . . . . . . . . . . . . . . .  48
     11.1.  Normative References . . . . . . . . . . . . . . . . . .  48
     11.2.  Informative References . . . . . . . . . . . . . . . . .  48









Moriarty, et al.              Informational                     [Page 3]

RFC 8017                      PKCS #1 v2.2                 November 2016


   Appendix A.  ASN.1 Syntax . . . . . . . . . . . . . . . . . . . .  54
     A.1.  RSA Key Representation  . . . . . . . . . . . . . . . . .  54
       A.1.1.  RSA Public Key Syntax . . . . . . . . . . . . . . . .  54
       A.1.2.  RSA Private Key Syntax  . . . . . . . . . . . . . . .  55
     A.2.  Scheme Identification . . . . . . . . . . . . . . . . . .  57
       A.2.1.  RSAES-OAEP  . . . . . . . . . . . . . . . . . . . . .  57
       A.2.2.  RSAES-PKCS-v1_5 . . . . . . . . . . . . . . . . . . .  60
       A.2.3.  RSASSA-PSS  . . . . . . . . . . . . . . . . . . . . .  60
       A.2.4.  RSASSA-PKCS-v1_5  . . . . . . . . . . . . . . . . . .  62
   Appendix B.  Supporting Techniques  . . . . . . . . . . . . . . .  63
     B.1.  Hash Functions  . . . . . . . . . . . . . . . . . . . . .  63
     B.2.  Mask Generation Functions . . . . . . . . . . . . . . . .  66
       B.2.1.  MGF1  . . . . . . . . . . . . . . . . . . . . . . . .  67
   Appendix C.  ASN.1 Module . . . . . . . . . . . . . . . . . . . .  68
   Appendix D.  Revision History of PKCS #1  . . . . . . . . . . . .  76
   Appendix E.  About PKCS . . . . . . . . . . . . . . . . . . . . .  77
   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  78
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  78

1.  Introduction

   This document provides recommendations for the implementation of
   public-key cryptography based on the RSA algorithm [RSA], covering
   the following aspects:

   o  Cryptographic primitives

   o  Encryption schemes

   o  Signature schemes with appendix

   o  ASN.1 syntax for representing keys and for identifying the schemes

   The recommendations are intended for general application within
   computer and communications systems and as such include a fair amount
   of flexibility.  It is expected that application standards based on
   these specifications may include additional constraints.  The
   recommendations are intended to be compatible with the standards IEEE
   1363 [IEEE1363], IEEE 1363a [IEEE1363A], and ANSI X9.44 [ANSIX944].

   This document supersedes PKCS #1 version 2.1 [RFC3447] but includes
   compatible techniques.

   The organization of this document is as follows:

   o  Section 1 is an introduction.

   o  Section 2 defines some notation used in this document.



Moriarty, et al.              Informational                     [Page 4]

RFC 8017                      PKCS #1 v2.2                 November 2016


   o  Section 3 defines the RSA public and private key types.

   o  Sections 4 and 5 define several primitives, or basic mathematical
      operations.  Data conversion primitives are in Section 4, and
      cryptographic primitives (encryption-decryption and signature-
      verification) are in Section 5.

   o  Sections 6, 7, and 8 deal with the encryption and signature
      schemes in this document.  Section 6 gives an overview.  Along
      with the methods found in PKCS #1 v1.5, Section 7 defines an
      encryption scheme based on Optimal Asymmetric Encryption Padding
      (OAEP) [OAEP], and Section 8 defines a signature scheme with
      appendix based on the Probabilistic Signature Scheme (PSS)
      [RSARABIN] [PSS].

   o  Section 9 defines the encoding methods for the signature schemes
      in Section 8.

   o  Appendix A defines the ASN.1 syntax for the keys defined in
      Section 3 and the schemes in Sections 7 and 8.

   o  Appendix B defines the hash functions and the mask generation
      function (MGF) used in this document, including ASN.1 syntax for
      the techniques.

   o  Appendix C gives an ASN.1 module.

   o  Appendices D and E outline the revision history of PKCS #1 and
      provide general information about the Public-Key Cryptography
      Standards.

   This document represents a republication of PKCS #1 v2.2 [PKCS1_22]
   from RSA Laboratories' Public-Key Cryptography Standards (PKCS)
   series.

1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].











Moriarty, et al.              Informational                     [Page 5]

RFC 8017                      PKCS #1 v2.2                 November 2016


2.  Notation

   The notation in this document includes:

      c              ciphertext representative, an integer between 0 and
                     n-1

      C              ciphertext, an octet string

      d              RSA private exponent

      d_i            additional factor r_i's CRT exponent,
                     a positive integer such that

                       e * d_i == 1 (mod (r_i-1)), i = 3, ..., u

      dP             p's CRT exponent, a positive integer such that

                       e * dP == 1 (mod (p-1))

      dQ             q's CRT exponent, a positive integer such that

                       e * dQ == 1 (mod (q-1))

      e              RSA public exponent

      EM             encoded message, an octet string

      emBits         (intended) length in bits of an encoded message EM

      emLen          (intended) length in octets of an encoded message
                     EM

      GCD(. , .)     greatest common divisor of two nonnegative integers

      Hash           hash function

      hLen           output length in octets of hash function Hash

      k              length in octets of the RSA modulus n

      K              RSA private key

      L              optional RSAES-OAEP label, an octet string

      LCM(., ..., .) least common multiple of a list of nonnegative
                     integers




Moriarty, et al.              Informational                     [Page 6]

RFC 8017                      PKCS #1 v2.2                 November 2016


      m              message representative, an integer between 0 and
                     n-1

      M              message, an octet string

      mask           MGF output, an octet string

      maskLen        (intended) length of the octet string mask

      MGF            mask generation function

      mgfSeed        seed from which mask is generated, an octet string

      mLen           length in octets of a message M

      n              RSA modulus, n = r_1 * r_2 * ... * r_u , u >= 2

      (n, e)         RSA public key

      p, q           first two prime factors of the RSA modulus n

      qInv           CRT coefficient, a positive integer less than
                     p such that q * qInv == 1 (mod p)

      r_i            prime factors of the RSA modulus n, including
                     r_1 = p, r_2 = q, and additional factors if any

      s              signature representative, an integer between 0 and
                     n-1

      S              signature, an octet string

      sLen           length in octets of the EMSA-PSS salt

      t_i            additional prime factor r_i's CRT coefficient, a
                     positive integer less than r_i such that

                       r_1 * r_2 * ... * r_(i-1) * t_i == 1 (mod r_i) ,

                     i = 3, ... , u

      u              number of prime factors of the RSA modulus, u >= 2

      x              a nonnegative integer

      X              an octet string corresponding to x

      xLen           (intended) length of the octet string X



Moriarty, et al.              Informational                     [Page 7]

RFC 8017                      PKCS #1 v2.2                 November 2016


      0x             indicator of hexadecimal representation of an octet
                     or an octet string: "0x48" denotes the octet with
                     hexadecimal value 48; "(0x)48 09 0e" denotes the
                     string of three consecutive octets with hexadecimal
                     values 48, 09, and 0e, respectively

      \lambda(n)     LCM(r_1-1, r_2-1, ... , r_u-1)

      \xor           bit-wise exclusive-or of two octet strings

      \ceil(.)       ceiling function; \ceil(x) is the smallest integer
                     larger than or equal to the real number x

      ||             concatenation operator

      ==             congruence symbol; a == b (mod n) means that the
                     integer n divides the integer a - b

   Note: The Chinese Remainder Theorem (CRT) can be applied in a non-
   recursive as well as a recursive way.  In this document, a recursive
   approach following Garner's algorithm [GARNER] is used.  See also
   Note 1 in Section 3.2.

3.  Key Types

   Two key types are employed in the primitives and schemes defined in
   this document: RSA public key and RSA private key.  Together, an RSA
   public key and an RSA private key form an RSA key pair.

   This specification supports so-called "multi-prime" RSA where the
   modulus may have more than two prime factors.  The benefit of multi-
   prime RSA is lower computational cost for the decryption and
   signature primitives, provided that the CRT is used.  Better
   performance can be achieved on single processor platforms, but to a
   greater extent on multiprocessor platforms, where the modular
   exponentiations involved can be done in parallel.

   For a discussion on how multi-prime affects the security of the RSA
   cryptosystem, the reader is referred to [SILVERMAN].

3.1.  RSA Public Key

   For the purposes of this document, an RSA public key consists of two
   components:

         n        the RSA modulus, a positive integer
         e        the RSA public exponent, a positive integer




Moriarty, et al.              Informational                     [Page 8]

RFC 8017                      PKCS #1 v2.2                 November 2016


   In a valid RSA public key, the RSA modulus n is a product of u
   distinct odd primes r_i, i = 1, 2, ..., u, where u >= 2, and the RSA
   public exponent e is an integer between 3 and n - 1 satisfying
   GCD(e,\lambda(n)) = 1, where \lambda(n) = LCM(r_1 - 1, ..., r_u - 1).
   By convention, the first two primes r_1 and r_2 may also be denoted p
   and q, respectively.

   A recommended syntax for interchanging RSA public keys between
   implementations is given in Appendix A.1.1; an implementation's
   internal representation may differ.

3.2.  RSA Private Key

   For the purposes of this document, an RSA private key may have either
   of two representations.

   1.  The first representation consists of the pair (n, d), where the
       components have the following meanings:

            n       the RSA modulus, a positive integer
            d       the RSA private exponent, a positive integer

   2.  The second representation consists of a quintuple (p, q, dP, dQ,
       qInv) and a (possibly empty) sequence of triplets (r_i, d_i,
       t_i), i = 3, ..., u, one for each prime not in the quintuple,
       where the components have the following meanings:

            p      the first factor, a positive integer
            q      the second factor, a positive integer
            dP     the first factor's CRT exponent, a positive integer
            dQ     the second factor's CRT exponent, a positive integer
            qInv   the (first) CRT coefficient, a positive integer
            r_i    the i-th factor, a positive integer
            d_i    the i-th factor's CRT exponent, a positive integer
            t_i    the i-th factor's CRT coefficient, a positive integer

   In a valid RSA private key with the first representation, the RSA
   modulus n is the same as in the corresponding RSA public key and is
   the product of u distinct odd primes r_i, i = 1, 2, ..., u, where u
   >= 2.  The RSA private exponent d is a positive integer less than n
   satisfying

      e * d == 1 (mod \lambda(n)),

   where e is the corresponding RSA public exponent and \lambda(n) is
   defined as in Section 3.1.





Moriarty, et al.              Informational                     [Page 9]

RFC 8017                      PKCS #1 v2.2                 November 2016


   In a valid RSA private key with the second representation, the two
   factors p and q are the first two prime factors of the RSA modulus n
   (i.e., r_1 and r_2); the CRT exponents dP and dQ are positive
   integers less than p and q, respectively, satisfying

      e * dP == 1 (mod (p-1))

      e * dQ == 1 (mod (q-1)) ,

   and the CRT coefficient qInv is a positive integer less than p
   satisfying

      q * qInv == 1 (mod p).

   If u > 2, the representation will include one or more triplets (r_i,
   d_i, t_i), i = 3, ..., u.  The factors r_i are the additional prime
   factors of the RSA modulus n.  Each CRT exponent d_i (i = 3, ..., u)
   satisfies

      e * d_i == 1 (mod (r_i - 1)).

   Each CRT coefficient t_i (i = 3, ..., u) is a positive integer less
   than r_i satisfying

      R_i * t_i == 1 (mod r_i) ,

   where R_i = r_1 * r_2 * ... * r_(i-1).

   A recommended syntax for interchanging RSA private keys between
   implementations, which includes components from both representations,
   is given in Appendix A.1.2; an implementation's internal
   representation may differ.

   Notes:

   1.  The definition of the CRT coefficients here and the formulas that
       use them in the primitives in Section 5 generally follow Garner's
       algorithm [GARNER] (see also Algorithm 14.71 in [HANDBOOK]).
       However, for compatibility with the representations of RSA
       private keys in PKCS #1 v2.0 and previous versions, the roles of
       p and q are reversed compared to the rest of the primes.  Thus,
       the first CRT coefficient, qInv, is defined as the inverse of q
       mod p, rather than as the inverse of R_1 mod r_2, i.e., of
       p mod q.

   2.  Quisquater and Couvreur [FASTDEC] observed the benefit of
       applying the CRT to RSA operations.




Moriarty, et al.              